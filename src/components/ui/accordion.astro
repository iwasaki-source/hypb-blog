---
import { getCollection } from "astro:content";

const { title, items, blog } = Astro.props;


const categoryTagNum = async(title, name) => {
  const allPosts = await getCollection('articles');
  const nonDraftPosts = allPosts.filter((post) => !post.data.draft);
  switch (title) {
    case 'Category':
      const filterCategory = nonDraftPosts.filter(item => item.data.category === name);
      return filterCategory.length;
    case 'Tag':
      const filterTag = nonDraftPosts.filter(items => {
        return items.data.tags.some(item => item === name)
      })
      return filterTag.length;
  }
}
---
<details open={!blog} >
  <summary>
    <div class="inner">{title}</div>
  </summary>
  <div class="content">
    {items.map(item => {
      const { name, slug } = item;
      const catTagNum = categoryTagNum(title, name);
      return (
        <a href={
          title === 'Category'
            ? `/articles/category/${slug}`
            : `/articles/tag/${slug}`
          }
          class="item"
        >{name}
        <span class="num">{catTagNum}</span>
        </a>
      )
    })}
  </div>
</details>

<style lang="scss">
  details {
    cursor: pointer;
  }
  details[open] summary .inner {
    border-bottom-left-radius: unset;
    border-bottom-right-radius: unset;
    &::after {
      rotate: -135deg;
      margin-top: 0.4rem;
    }
  }
  .inner {
    width: 100%;
    background-color: var(--yellow);
    padding: 0.8rem 1rem;
    border-radius: 1rem;
    border: 2px solid var(--gray-10);
    display: flex;
    justify-content: space-between;
    &::after {
      content: '';
      width: 0.5rem;
      height: 0.5rem;
      border-bottom: 1.5px solid var(--black);
      border-right: 1.5px solid var(--black);
      rotate: 45deg;
      margin-top: 0.2rem;
    }
  }
  .content {
    background-color: var(--black);
    border: 2px solid var(--gray-10);
    border-top: none;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
    padding: 1rem 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: var(--gray-10);
    padding: 0.5rem 0.75rem 0.5rem 0.5rem;
    border-radius: 0.5rem;
    transition: 0.3s;
    @media (hover: hover) {
      &:hover {
        color: var(--black);
        background: var(--gray-10);
        padding: 0.5rem 0.85rem 0.5rem;
      }
    }
  }
</style>